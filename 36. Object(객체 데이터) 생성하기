// 객체데이터(Object) 를 만드는 3가지 방법
// 점 표기법, 대괄호 표기법
// key를 변수에 넣어서 활용하기

// 객체 데이터 안에서 key의 순서는 없음. key가 고유하기 때문.
// 같은 key에 두 번의 value를 넣을 경우 나중에 넣은 value가 남는다.



// 1) 내장 생성자 함수를 이용하는 방법
const user1 = new Object();

user1.name = "John";
user1.email = "John@example.com";
user1.age = 25;

console.log(user1); // {name: 'John', email: 'John@example.com', age: 25}
console.log(user1.name); // John - 점 표기법
console.log(user1["name"]); // John - 대괄호 표기법

// 2) 생성자 함수를 이용하는 방법
// User2라는 생성자 함수를 정의하고, 
function User2(name, email, age) {
  this.name = name;
  this.email = email;
  this.age = age;
}

const user2 = new User2('John', 'John@example.com', 25);

console.log(user2); // User2 {name: 'John', email: 'John@example.com', age: 25}
console.log(user2.name); // John
console.log(user2["name"]); // John

// 3) 리터럴 방식을 이용하는 방법 (대부분 이와 같은 방식으로 생성함)
const user3 = {
  name: "John",
  email: "John@example.com",
  age: 25,
};

console.log(user3); // {name: 'John', email: 'John@example.com', age: 25}
console.log(user3.name); // John
console.log(user3["name"]); // JOhn

// 'name' 문자열을 변수 key에 넣어서 활용하는 방법
const key = 'name';
console.log(user3[key]); // John  - 이와 같이 데이터로 속성의 이름을 조회할 때는 대괄호 표기법으로만 가능함.

