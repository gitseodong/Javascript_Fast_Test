// BigInt

// BigInt는 길이 제한이 엇는 정수(integer)이다.
// 숫자(number) 데이터가 안정적으로 표시할 수 있는,
// 최대치(`2^53 - 1`)보다 큰 정수를 표현할 수 있음
// 정수 뒤에 `n`을 붙이거나 `BigInt()`를 호출해 생성한다.
// BigInt와 일반 Number를 연산할 수 없다.
// BigInt끼리만 연산 가능.

console.log(1234567890123456789012345678901234567890); // 1.2345678901234568e+39

console.log(1234567890123456789012345678901234567890n); // 1234567890123456789012345678901234567890n
console.log(BigInt("1234567890123456789012345678901234567890")); // 1234567890123456789012345678901234567890n

const a = 11n;
const b = 22;

// 숫자 => BigInt
console.log(a + BigInt(b)); // 33n
console.log(typeof (a + BigInt(b))); // bigint

// BigInt => 숫자
console.log(Number(a) + b); // 33
console.log(typeof (Number(a) + b)); // number


// 아래는 BigInt의 계산시간 체크하는 코드, 내가 만듦

let n1 = 1000000000000000;
let b1 = 1000000000000000n;

const time1 = new Date().getTime();

for (let i = 0; i < 100000000; i++) {
  n1 += 1;
}
const time2 = new Date().getTime();

for (let i = 0; i < 100000000; i++) {
  b1 += 1n;
}
const time3 = new Date().getTime();
console.log("n1 = ", n1);
console.log("b1 = ", b1);
console.log("n 시간:", time2 - time1, "ms");
console.log("b 시간:", time3 - time2, "ms");
