let date = new Date();
console.log(date);
// 타임스탬프 - 'Tue Aug 01 2023 14:33:43 GMT+0900 (한국 표준시)'

let d1 = new Date(2022, 11, 16, 12, 57, 30);
console.log(d1); // Fri Dec 16 2022 12:57:30 GMT+0900 (한국 표준시)
// '월'만 zero based number

let d2 = new Date("Fri Dec 16 2022 12:57:30 GMT+0900 (한국 표준시)");
console.log(d2);
console.log(d2.getFullYear()); // 2022

// .getFullYear()와 .setFullYear()
// 날짜 인스턴스의 '연도'를 반환하거나 저장함.

date = new Date();
console.log(date.getFullYear()); // 2023

date.setFullYear(2020);
console.log(date); // Sat Aug 01 2020 14:43:18 GMT+0900 (한국 표준시)

// .getMonth()와 .setMonth()
// 날짜 인스턴스의 '월'을 반환하거나 저장함.
// 0부터 시작(Zero-based numbering)합니다.

date = new Date();
console.log(date.getMonth()); // 7
console.log(date); // Tue Aug 01 2023 14:45:02 GMT+0900 (한국 표준시)

date.setMonth(0);
console.log(date.getMonth()); // 0
console.log(date); // Sun Jan 01 2023 14:45:02 GMT+0900 (한국 표준시)

// .getDate()와 .setDate()
// 날짜 인스턴스의 '일'을 반환하거나 저장함.

date = new Date();
console.log(date.getDate()); // 1
console.log(date); // Tue Aug 01 2023 14:49:09 GMT+0900 (한국 표준시)

date.setDate(11);
console.log(date.getDate()); // 11
console.log(date); // Fri Aug 11 2023 14:49:09 GMT+0900 (한국 표준시)

// .getHours()와 .setHours()
// 날짜 인스턴스의 '시간'을 반환하거나 지정함.

date = new Date();
console.log(date.getHours()); // 14
console.log(date); // Tue Aug 01 2023 14:51:50 GMT+0900 (한국 표준시)

date.setHours(7);
console.log(date.getHours()); // 7
console.log(date); // Tue Aug 01 2023 07:51:50 GMT+0900 (한국 표준시)

// .getMinutes()와 .setMinutes()
// 날짜 인스턴스의 '분'을 반환하거나 지정함.

date = new Date();
console.log(date.getMinutes()); // 53
console.log(date); // Tue Aug 01 2023 14:53:19 GMT+0900 (한국 표준시)

date.setMinutes(2);
console.log(date.getMinutes()); // 2
console.log(date); // Tue Aug 01 2023 14:02:19 GMT+0900 (한국 표준시)

// .getSeconds()와 .setSeconds()
// 날짜 인스턴스의 '초'를 반환하거나 지정함.

date = new Date();
console.log(date.getSeconds()); // 25
console.log(date); // Tue Aug 01 2023 14:55:25 GMT+0900 (한국 표준시)

date.setSeconds(17);
console.log(date.getSeconds()); // 17
console.log(date); // Tue Aug 01 2023 14:55:17 GMT+0900 (한국 표준시)

// .getDay()
// 날짜 인스턴스의 '요일'을 반환함.
// set은 없음

date = new Date();
day = date.getDay();

console.log(day); // 2
console.log(getDayKo(day)); // 화요일

function getDayKo(day) {
  switch (day) {
    case 0:
      return "일요일";
    case 1:
      return "월요일";
    case 2:
      return "화요일";
    case 3:
      return "수요일";
    case 4:
      return "목요일";
    case 5:
      return "금요일";
    case 6:
      return "토요일";
  }
}

// .getTime()와 .setTime()
// '1970-01-01 00:00:00' (유닉스타임)부터 경과한 날짜 인스턴스의 '밀리초(ms)'로 반환하거나 지정함.

date = new Date();
console.log(date.getTime()); // 1690869646968
console.log(date); // Tue Aug 01 2023 15:00:46 GMT+0900 (한국 표준시)

date.setTime(1700000000000);
console.log(date.getTime()); // 1700000000000
console.log(date); // Wed Nov 15 2023 07:13:20 GMT+0900 (한국 표준시)

// 임의의 isAfter
Date.prototype.isAfter = function (date) {
  const a = this.getTime();
  const b = date.getTime();
  return a > b;
};

d1 = new Date("Tue Aug 01 2023 15:00:46 GMT+0900 (한국 표준시)");
d2 = new Date("Wed Nov 15 2023 07:13:20 GMT+0900 (한국 표준시)");
console.log(d1.isAfter(d2)); // false

// Date.now() - static
// '1970-01-01 00:00:00'(유닉스타임)부터 경과한,
// 메소드가 호출될 때의 '밀리초(ms)'로 반환함.

let time = new Date().getTime();
console.log(Date.now());
console.log(time);

setTimeout(() => {
  console.log(Date.now());
  console.log(time);
}, 1000);
