// 1차원 배열, 값을 직접 입력하여 초기화, 배열의 아이템(배열의 요소)를 직접 입력
let arr = new Array(3, 4, 5, 6, 7); // 배열의 요소가 3, 4, 5, 6, 7인 배열
console.log(arr); // (5) [3, 4, 5, 6, 7]
arr = new Array(3); // 배열의 길이가 3인 배열
console.log(arr); // (3) [empty × 3]
arr = [3, 4, 5, 6, 7]; // 리터럴 방식으로 배열을 만드는 방법
console.log('arr :', arr); // arr : (5) [3, 4, 5, 6, 7]

// 1차원 배열, 하나의 값으로 초기화
let arr2 = Array.from({length: 5}, () => 7);
console.log('arr2 :', arr2);

// 2차원 배열, 값을 직접 입력하여 초기화
let arr3 = [[0, 1, 2, 3],
           [4, 5, 6, 7],
           [8, 9, 10, 11]];
console.log('arr3 :', arr3);

// 2차원 배열, 4X5 배열 생성
let arr4 = Array.from(Array(4), () => new Array(5));
console.log('arr4 :', arr4);

// 2차원 배열, 반복문을 이용해 배열 초기화
let arr5 = new Array(3);
console.log('arr5 :', arr5);
for (let i = 0; i < arr5.length; i++) {
  arr5[i] = Array.from(Array(4), (a, b) => b + i * 4);
}
console.log('arr5 :', arr5);

// 1차원 배열
let arr6 = new Array(5);
console.log('arr6 :', arr6);
// 1차원 배열, fill을 이용하여 값 초기화, 많이 사용됨.
let arr7 = new Array(5).fill(2);
console.log('arr7 :', arr7);
