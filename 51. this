// this
// 일반 함수의 this는 호출 위치에서 정의
// 화살표 함수의 this는 자신이 선언된 함수(렉시컬) 범위에서 정의

// (내생각) this는 기본적으로 '이 객체의'라는 뜻을 가짐. this를 포함하는 가장 안쪽의 객체(데이터) 자체를 가리킴.
// (내생각) 화살표 함수의 this는 일단 자신을 포함하는 가장 안쪽의 함수의 this와 같음.


const user = {
  firstName: "Seongchang",
  lastName: "Jo",
  age: 41,
  getFullName: function () {
    return `${this.firstName} ${this.lastName}`;
  }, // 여기에서 this 대신 user를 써도 같은 결과가 나온다.
};

console.log(user.getFullName()); // Seongchang Jo

const user2 = {
  firstName: "Seongchang",
  lastName: "Jo",
  age: 41,
  getFullName: () => {
    return `${this.firstName} ${this.lastName}`;
  }, // 화살표 함수로 바꿈.
};

console.log(user2.getFullName()); // undefined undefined

function user3() {
  this.firstName = "Eunjung";
  this.lastName = "Oh";

  return {
    firstName: "Seongchang",
    lastName: "Jo",
    age: 41,
    getFullName: () => {
      return `${this.firstName} ${this.lastName}`;
    },
  };
}
const u3 = user3();
console.log(u3.getFullName()); // Eunjung Oh

function user4() {
  this.firstName = "Eunjung";
  this.lastName = "Oh";

  return {
    firstName: "Seongchang",
    lastName: "Jo",
    age: 41,
    getFullName: function () {
      return `${this.firstName} ${this.lastName}`;
    },
  };
}
const u4 = user4();
console.log(u4.getFullName()); // Seongchang Jo
