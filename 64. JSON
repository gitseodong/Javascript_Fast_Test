// Object.assign() - static
// 하나 이상의 출처(Source) 객체로부터 대상(Target) 객체로 속성을 복사하고 대상 객체를 반환함.
// 전개 연산자 방식을 사용해도 같은 결과가 나온다.

let target = { a: 1, b: 2 };
let source1 = { b: 3, c: 4 };
let source2 = { c: 5, d: 6 };
let result = Object.assign({}, target, source1, source2);
let result2 = {
  ...target,
  ...source1,
  ...source2,
};

console.log(target); // { a: 1, b: 2}
console.log(result); // { a: 1, b: 3, c:5, d: 6}
console.log(result2); // { a: 1, b: 3, c:5, d: 6}

// JSON (JavaScript Object Notation)

// 데이터 전달을 위한 표준 포맷!
// 문자, 숫자, Boolean, Null, 객체, 배열만 사용
// 문자는 큰 따옴표만 사용, 작은따옴표나 백틱 사용 불가
// 후행 쉼표 사용 불가
// .json 확장자 사용
// JSON 문자열은 ""가 제거되지 않고, 항상 ""가 포함된 상태이다.

// JSON.stringify() - 데이터를 JSON 문자로 변환함.
// JSON.parse() - JSON 문자를 분석해 데이터로 변환함.

console.log(JSON.stringify("Hello world!")); // "Hello world!"
console.log(JSON.stringify(123)); // 123
console.log(JSON.stringify(false)); // false
console.log(JSON.stringify(null)); // null
console.log(JSON.stringify({ name: "조성창", age: 41 })); // {"name":"조성창","age":41}
console.log(JSON.stringify([1, 2, 3])); // [1,2,3]

console.log("//-----------------------//");

console.log(JSON.parse('"Hello world!"')); // Hello world!
console.log(JSON.parse("123")); // 123
console.log(JSON.parse("false")); // false
console.log(JSON.parse("null")); // null
console.log(JSON.parse('{"name":"조성창","age":41}')); // {name: '조성창', age: 41}
console.log(JSON.parse("[1,2,3]")); // [1, 2, 3]
