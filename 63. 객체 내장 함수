// Object.assign() - static
// 하나 이상의 출처(Source) 객체로부터 대상(Target) 객체로 속성을 복사하고 대상 객체를 반환함.
// 전개 연산자 방식을 사용해도 같은 결과가 나온다.

let target = { a: 1, b: 2 };
let source1 = { b: 3, c: 4 };
let source2 = { c: 5, d: 6 };
let result = Object.assign({}, target, source1, source2);
let result2 = {
  ...target,
  ...source1,
  ...source2,
};

console.log(target); // { a: 1, b: 2}
console.log(result); // { a: 1, b: 3, c:5, d: 6}
console.log(result2); // { a: 1, b: 3, c:5, d: 6}

// Object.entries() - static
// 주어진 객체의 각 속성과 값으로 하나의 배열을 만들어 요소로 추가한 2차원 배열을 반환함.

let user = {
  name: "조성창",
  age: 41,
  isValid: true,
  email: "seodong56@nate.com",
};

console.log(Object.entries(user));

for (const [key, value] of Object.entries(user)) {
  console.log(key, value);
}

// Object.keys() - static
// 주어진 객체의 속성 이름(문자열)을 나열한 배열을 반환함.

user = {
  name: "조성창",
  age: 41,
  isValid: true,
  email: "seodong56@nate.com",
};
console.log(Object.keys(user)); // ['name', 'age', 'isValid', 'email']

// Object.values() - static
// 주어진 객체의 값을 나열한 배열을 반환함.

user = {
  name: "조성창",
  age: 41,
  isValid: true,
  email: "seodong56@nate.com",
};
console.log(Object.values(user)); // ['조성창', 41, true, 'seodong56@nate.com']


