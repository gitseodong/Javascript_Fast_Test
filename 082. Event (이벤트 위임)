  <body>
    <div class="parent">
      <div class="child">1</div>
      <div class="child">2</div>
      <div class="child">3</div>
      <div class="child">4</div>
    </div>
  </body>

// 이벤트 위임(Delegation)

// 비슷한 패턴의 여러 요소에서 이벤트를 핸들링해야 하는 경우,
// 단일 조상 요소에서 제어하는 이벤트 위임 패턴을 사용할 수 있다.

let parentEl = document.querySelector(".parent");
let childEls = document.querySelectorAll(".child");
// querySelectorAll()은 NodeList를 반환함. forEach 사용가능.

// 모든 대상 요소에 이벤트 등록!
// childEls.forEach((el) => {
//   el.addEventListener("click", (event) => {
//     console.log(event.target.textContent);
//   });
// });
// 이 코드와 같이 하는 경우 이벤트를 많이 등록해야 함.

// 조상 요소에 이벤트 위임!
// 그러면 이벤트를 1개만 등록해도 된다.
parentEl.addEventListener("click", (event) => {
  const childEl = event.target.closest(".child");
  // parentEl에서 발생한 event의 target은 클릭이 발생한 요소(자식요소)를 말함.
  // 이벤트 발생 요소(본인 요소)를 포함한 상위 요소 중에서 .child 요소를 찾음.
  // 결국 클릭이 발생한 .child 요소가 childEl가 담긴다.
  // 없으면 null 이 반환되고, 그러면 다음 if문이 실행되지 않는다.
  if (childEl) {
    console.log(childEl.textContent);
  }
});
